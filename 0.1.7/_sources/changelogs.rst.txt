
Changelogs
==========

`0.1.7 </0.1.7>`_
------------------

Functionality changes

- Swapped out ``register_backward_hook`` with ``register_full_backward_hook`` in
  :class:`~k1lib.callbacks.hookModule.HookModule` callback
- Changed ``Callbacks.suspend()`` to take in names only
- Added ``Callbacks.suspendClasses()`` to take in classes
- Changed ``Callbacks.suspendEvaluation()`` to ``Callbacks.suspendEval()``, also
  added functionality for white and black lists
- Ripped out complex ``Callback.__getattr__`` mechanism (that automatically searches
  the parent learner) to improve speed
- Implemented grace stop handling for :class:`k1lib.Learner`. Before, if someone
  throws :exc:`k1lib.CancelRunException` while executing a batch, then it will
  immediately jump to the end of the run. Changed it so that it will be caught in
  the batch loop, execute checkpoints ``cancelBatch`` and ``endBatch`` and rethrow
  it. Same thing with :exc:`k1lib.CancelEpochException`
- Added :mod:`k1lib.callbacks.core` callbacks ``Normal`` and ``RNN``
- Moved loss function from being a core functionality inside ``Learner`` to an
  external callback, so that adapting multiple loss functions are possible
- Added ``nonNone`` cli tool
- Added ``nn.Module.preserveDevice()`` context manager
- Added more plot decorators for ``MemoryProfiler``

Style changes

- Changed ``Callbacks.learner`` to ``Callbacks.l``
- Changed ``Callback.learner`` to ``Callbacks.l``
- Changed :class:`~k1lib.callbacks.lossLandscape.LossLandscape` callback so that it
  follows the common flow structure. Before, it implements a whole new ``cbs(...)``
  schema that essentially duplicated the loop inside of :class:`k1lib.Learner`

0.1.6
----------------

I don't really keep track of things 0.1.6 and before, so nothing here really
